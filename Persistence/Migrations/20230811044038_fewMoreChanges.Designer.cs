// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230811044038_fewMoreChanges")]
    partial class fewMoreChanges
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BorrowerDetailsLoanInformation", b =>
                {
                    b.Property<Guid>("BorrowerDetailsBorrowerId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("LoanInformationId")
                        .HasColumnType("char(36)");

                    b.HasKey("BorrowerDetailsBorrowerId", "LoanInformationId");

                    b.HasIndex("LoanInformationId");

                    b.ToTable("BorrowerDetailsLoanInformation");
                });

            modelBuilder.Entity("Domain.BorrowerDetails", b =>
                {
                    b.Property<Guid>("BorrowerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("ContactNumber")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .HasColumnType("longtext");

                    b.Property<string>("MailingAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("Occupation")
                        .HasColumnType("longtext");

                    b.Property<int>("Zipcode")
                        .HasColumnType("int");

                    b.HasKey("BorrowerId");

                    b.ToTable("BorrowersDetails");
                });

            modelBuilder.Entity("Domain.LoanDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal>("PIPmtAmt")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateOnly>("PmtDueDate")
                        .HasColumnType("date");

                    b.Property<string>("PropertyAddress")
                        .HasColumnType("longtext");

                    b.Property<decimal>("RemainingPayments")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("UPBAmt")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.ToTable("LoanDetails");
                });

            modelBuilder.Entity("Domain.LoanInformation", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<bool>("Escrow")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateOnly>("LoanBoardingDate")
                        .HasColumnType("date");

                    b.Property<int>("LoanTerm")
                        .HasColumnType("int");

                    b.Property<decimal>("LoanType")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateOnly>("NoteDate")
                        .HasColumnType("date");

                    b.Property<decimal>("NoteRatePercent")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("PaymentFreq")
                        .HasColumnType("longtext");

                    b.Property<string>("PrimaryContact")
                        .HasColumnType("longtext");

                    b.Property<int>("Prior_Servicer_Loan_Id")
                        .HasColumnType("int");

                    b.Property<decimal>("TaxInsurancePmtAmt")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("TotalLoanAmount")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.ToTable("LoanInformation");
                });

            modelBuilder.Entity("BorrowerDetailsLoanInformation", b =>
                {
                    b.HasOne("Domain.BorrowerDetails", null)
                        .WithMany()
                        .HasForeignKey("BorrowerDetailsBorrowerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.LoanInformation", null)
                        .WithMany()
                        .HasForeignKey("LoanInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.LoanInformation", b =>
                {
                    b.HasOne("Domain.LoanDetails", "LoanDetails")
                        .WithOne("LoanInformation")
                        .HasForeignKey("Domain.LoanInformation", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoanDetails");
                });

            modelBuilder.Entity("Domain.LoanDetails", b =>
                {
                    b.Navigation("LoanInformation");
                });
#pragma warning restore 612, 618
        }
    }
}
